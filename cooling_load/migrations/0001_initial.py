# Generated by Django 4.2.23 on 2025-08-28 12:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ColdStorageProject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('storage_type', models.CharField(choices=[('fruit', 'Fruits & Vegetables'), ('meat', 'Meat Products'), ('dairy', 'Dairy Products'), ('frozen', 'Frozen Foods'), ('medicine', 'Pharmaceuticals'), ('general', 'General Storage')], max_length=20)),
                ('length', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)])),
                ('width', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200)])),
                ('height', models.FloatField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(20)])),
                ('outdoor_temp', models.FloatField(validators=[django.core.validators.MinValueValidator(-10), django.core.validators.MaxValueValidator(50)])),
                ('outdoor_humidity', models.FloatField(validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(100)])),
                ('indoor_temp', models.FloatField(validators=[django.core.validators.MinValueValidator(-30), django.core.validators.MaxValueValidator(20)])),
                ('indoor_humidity', models.FloatField(validators=[django.core.validators.MinValueValidator(40), django.core.validators.MaxValueValidator(95)])),
                ('insulation_type', models.CharField(choices=[('polyurethane', 'Polyurethane'), ('polystyrene', 'Polystyrene'), ('mineral_wool', 'Mineral Wool'), ('vacuum_panels', 'Vacuum Panels')], max_length=20)),
                ('insulation_thickness', models.FloatField(validators=[django.core.validators.MinValueValidator(0.05), django.core.validators.MaxValueValidator(0.5)])),
                ('product_mass', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100000)])),
                ('daily_product_input', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)])),
                ('number_of_workers', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(50)])),
                ('working_hours', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)])),
                ('lighting_power', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)])),
                ('fan_power', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5000)])),
                ('door_openings', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoolingLoadResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transmission_load', models.FloatField()),
                ('infiltration_load', models.FloatField()),
                ('product_load', models.FloatField()),
                ('internal_load', models.FloatField()),
                ('respiration_load', models.FloatField()),
                ('total_load', models.FloatField()),
                ('safety_factor', models.FloatField(default=1.15)),
                ('design_load', models.FloatField()),
                ('calculation_details', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='result', to='cooling_load.coldstorageproject')),
            ],
        ),
    ]
