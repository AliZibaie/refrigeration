# Generated by Django 4.2.23 on 2025-08-28 10:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Refrigerant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('coolprop_name', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('gwp', models.IntegerField()),
                ('odp', models.FloatField()),
                ('safety_class', models.CharField(max_length=10)),
                ('application', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cycle_type', models.CharField(choices=[('vapor_compression', 'Vapor Compression'), ('absorption', 'Absorption')], max_length=20)),
                ('expansion_device', models.CharField(choices=[('throttle', 'Throttle Valve'), ('turbine', 'Turbine')], default='throttle', max_length=10)),
                ('evaporator_temp', models.FloatField()),
                ('condenser_temp', models.FloatField()),
                ('generator_temp', models.FloatField(blank=True, null=True)),
                ('absorber_temp', models.FloatField(blank=True, null=True)),
                ('cop', models.FloatField(blank=True, null=True)),
                ('cooling_capacity', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('refrigerant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cycle_calculator.refrigerant')),
            ],
        ),
        migrations.CreateModel(
            name='StatePoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_number', models.IntegerField()),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('pressure', models.FloatField(blank=True, null=True)),
                ('enthalpy', models.FloatField(blank=True, null=True)),
                ('entropy', models.FloatField(blank=True, null=True)),
                ('quality', models.FloatField(blank=True, null=True)),
                ('calculation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cycle_calculator.calculation')),
            ],
            options={
                'unique_together': {('calculation', 'point_number')},
            },
        ),
    ]
